---
# handlers file for Ubuntu2004-CIS

- name: "HANDLER | sysctl flush ipv4 route table"
  become: true
  ansible.posix.sysctl:
    name: net.ipv4.route.flush
    value: "1"
    sysctl_set: true
  listen: sysctl flush ipv4 route table
  when: ansible_virtualization_type != "docker"

- name: "HANDLER | sysctl flush ipv6 route table"
  become: true
  ansible.posix.sysctl:
    name: net.ipv6.route.flush
    value: "1"
    sysctl_set: true
  listen: sysctl flush ipv6 route table
  when: ansible_virtualization_type != "docker"

- name: "HANDLER | systemd restart tmp.mount"
  become: true
  ansible.builtin.systemd:
    name: tmp.mount
    daemon_reload: true
    enabled: true
    masked: false
    state: reloaded
  listen: systemd restart tmp.mount
  when: ansible_virtualization_type != "docker"
  # ignore_errors: "{{ ubuntu2004cis_ignore_remount_errors }}"

- name: "HANDLER | systemd restart var-tmp.mount"
  become: true
  ansible.builtin.systemd:
    name: var-tmp.mount
    daemon_reload: true
    enabled: true
    masked: false
    state: reloaded
  listen: systemd restart var-tmp.mount
  # ignore_errors: "{{ ubuntu2004cis_ignore_remount_errors }}"

- name: "HANDLER | generate new grub config"
  become: true
  ansible.builtin.command: grub-mkconfig -o "{{ grub_cfg.stat.path }}"
  listen: generate new grub config
  changed_when: false
  notify: fix permissions after generate new grub config handler

- name: "HANDLER | fix permissions after generate new grub config handler"
  become: true
  ansible.builtin.file:
    path: "/boot/grub/grub.cfg"
    owner: root
    group: root
    mode: "0400"
  listen: fix permissions after generate new grub config handler
  when:
    - ansible_os_family == "Debian"
    - ubuntu2004cis_rule_1_4_1

- name: "HANDLER | restart firewalld"
  become: true
  ansible.builtin.service:
    name: firewalld
    state: restarted
  listen: restart firewalld

- name: "HANDLER | reload nftables"
  become: true
  ansible.builtin.service:
    name: nftables
    state: reloaded
  listen: reload nftables

- name: "HANDLER | restart xinetd"
  become: true
  ansible.builtin.service:
    name: xinetd
    state: restarted
  listen: restart xinetd

- name: "HANDLER | restart sshd"
  become: true
  ansible.builtin.service:
    name: ssh
    state: restarted
  listen: restart sshd

- name: "HANDLER | reload dconf"
  become: true
  ansible.builtin.command: dconf update
  listen: reload dconf
  changed_when: false

- name: "HANDLER | restart auditd"
  become: true
  ansible.builtin.service:
    name: auditd
    state: restarted
  listen: restart auditd
  when:
    - not ubuntu2004cis_skip_for_travis
  tags:
    - skip_ansible_lint

- name: "HANDLER | load audit rules"
  become: true
  ansible.builtin.command: /sbin/augenrules --load
  listen: load audit rules
  when:
    - not ubuntu2004cis_skip_for_travis
  tags:
    - skip_ansible_lint

- name: "HANDLER | restart systemd-coredump"
  become: true
  ansible.builtin.service:
    name: systemd-coredump.socket
    daemon_reload: true
    enabled: true
    state: restarted
  listen: restart systemd-coredump

- name: "HANDLER | restart journald"
  become: true
  ansible.builtin.service:
    name: systemd-journald
    state: restarted
  listen: restart journald
